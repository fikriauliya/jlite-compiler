Parsing...
test/p3.jlite

======= JLite Program =======

class P3{
  void main(Int a,Bool b,String c){
    println("Dummy statement to fulfill at least one statement requirement!");
  }

} 

class C1{
  Bool y;
  Bool x;

  void doSomething(){
    println("May I put some' \\ complicated \" string here please?\\");
  }


  Bool doSomething1(){
    Return [x,y](||);
  }


  Bool doSomething2(){
    Return [x,y](&&);
  }


  Bool doSomething3(Bool z,Bool zz){
    Return [[[x,y](||),z](||),zz](||);
  }


  Bool doSomething4(Bool z,Bool zz){
    Return [[[x,y](&&),z](&&),zz](&&);
  }


  Bool doSomething5(){
    Return [[(!)[x],[y,(!)[(!)[x]]](&&)](||),(!)[(!)[(!)[(!)[(!)[(!)[x]]]]]]](||);
  }


  Bool doSomething6(){
    Return [(!)[x],[y,(!)[(!)[[x,(!)[(!)[(!)[(!)[(!)[(!)[x]]]]]]](||)]]](&&)](||);
  }

}
class C2{
  Int y;
  Int x;

  Int doSomething1(){
    Return [x,y](+);
  }


  Int doSomething2(){
    Return [x,y](*);
  }


  Int doSomething3(Int z){
    Return [[x,y](+),z](+);
  }


  Int doSomething4(Int z){
    Return [[x,y](*),z](*);
  }


  Int doSomething5(Int z){
    Return [[x,y](*),z](+);
  }


  Int doSomething6(Int z){
    Return [x,[y,z](*)](+);
  }


  Int doSomething7(Int z){
    Return [x,[y,z](*)](+);
  }


  Int doSomething8(Int z){
    Return [[x,y](+),z](*);
  }


  Int doSomething9(Int z){
    Return [x,[y,z](*)](+);
  }


  Int doSomething10(Int z){
    Return (-)[z];
  }


  Int doSomething11(Int z){
    Return (-)[(-)[z]];
  }


  Int doSomething12(Int z){
    Return (-)[(-)[(-)[(-)[z]]]];
  }

}
class C3{

  Bool doSomething1(Int a,Int b){
    Return [a,b](>=);
  }


  Bool doSomething2(Int a,Int b){
    Return [a,b](>);
  }


  Bool doSomething3(Int a,Int b){
    Return [a,b](<=);
  }


  Bool doSomething4(Int a,Int b){
    Return [a,b](<);
  }


  Bool doSomething5(Int a,Int b){
    Return [a,b](!=);
  }


  Bool doSomething6(Int a,Int b){
    Return [a,b](==);
  }

}

======= End of JLite Program =======


======= JLite Program =======

class P3{
  void main(Int a,Bool b,String c){
    println("Dummy statement to fulfill at least one statement requirement!");
  }

} 

class C1{
  Bool y;
  Bool x;

  void doSomething(){
    println("May I put some' \\ complicated \" string here please?\\");
  }


  Bool doSomething1(){
    Return [(x:Bool,1):Bool,(y:Bool,1):Bool](||):Bool;
  }


  Bool doSomething2(){
    Return [(x:Bool,1):Bool,(y:Bool,1):Bool](&&):Bool;
  }


  Bool doSomething3(Bool z,Bool zz){
    Return [[[(x:Bool,1):Bool,(y:Bool,1):Bool](||):Bool,(z:Bool,2):Bool](||):Bool,(zz:Bool,2):Bool](||):Bool;
  }


  Bool doSomething4(Bool z,Bool zz){
    Return [[[(x:Bool,1):Bool,(y:Bool,1):Bool](&&):Bool,(z:Bool,2):Bool](&&):Bool,(zz:Bool,2):Bool](&&):Bool;
  }


  Bool doSomething5(){
    Return [[(!)[(x:Bool,1):Bool]:Bool,[(y:Bool,1):Bool,(!)[(!)[(x:Bool,1):Bool]:Bool]:Bool](&&):Bool](||):Bool,(!)[(!)[(!)[(!)[(!)[(!)[(x:Bool,1):Bool]:Bool]:Bool]:Bool]:Bool]:Bool]:Bool](||):Bool;
  }


  Bool doSomething6(){
    Return [(!)[(x:Bool,1):Bool]:Bool,[(y:Bool,1):Bool,(!)[(!)[[(x:Bool,1):Bool,(!)[(!)[(!)[(!)[(!)[(!)[(x:Bool,1):Bool]:Bool]:Bool]:Bool]:Bool]:Bool]:Bool](||):Bool]:Bool]:Bool](&&):Bool](||):Bool;
  }

}
class C2{
  Int y;
  Int x;

  Int doSomething1(){
    Return [(x:Int,1):Int,(y:Int,1):Int](+):Int;
  }


  Int doSomething2(){
    Return [(x:Int,1):Int,(y:Int,1):Int](*):Int;
  }


  Int doSomething3(Int z){
    Return [[(x:Int,1):Int,(y:Int,1):Int](+):Int,(z:Int,2):Int](+):Int;
  }


  Int doSomething4(Int z){
    Return [[(x:Int,1):Int,(y:Int,1):Int](*):Int,(z:Int,2):Int](*):Int;
  }


  Int doSomething5(Int z){
    Return [[(x:Int,1):Int,(y:Int,1):Int](*):Int,(z:Int,2):Int](+):Int;
  }


  Int doSomething6(Int z){
    Return [(x:Int,1):Int,[(y:Int,1):Int,(z:Int,2):Int](*):Int](+):Int;
  }


  Int doSomething7(Int z){
    Return [(x:Int,1):Int,[(y:Int,1):Int,(z:Int,2):Int](*):Int](+):Int;
  }


  Int doSomething8(Int z){
    Return [[(x:Int,1):Int,(y:Int,1):Int](+):Int,(z:Int,2):Int](*):Int;
  }


  Int doSomething9(Int z){
    Return [(x:Int,1):Int,[(y:Int,1):Int,(z:Int,2):Int](*):Int](+):Int;
  }


  Int doSomething10(Int z){
    Return (-)[(z:Int,2):Int]:Int;
  }


  Int doSomething11(Int z){
    Return (-)[(-)[(z:Int,2):Int]:Int]:Int;
  }


  Int doSomething12(Int z){
    Return (-)[(-)[(-)[(-)[(z:Int,2):Int]:Int]:Int]:Int]:Int;
  }

}
class C3{

  Bool doSomething1(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](>=):Bool;
  }


  Bool doSomething2(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](>):Bool;
  }


  Bool doSomething3(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](<=):Bool;
  }


  Bool doSomething4(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](<):Bool;
  }


  Bool doSomething5(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](!=):Bool;
  }


  Bool doSomething6(Int a,Int b){
    Return [(a:Int,2):Int,(b:Int,2):Int](==):Bool;
  }

}

======= End of JLite Program =======

======= IR3 Program =======

======= CData3 ======= 

class P3{
}

class C1{
  Bool y;
  Bool x;
}

class C2{
  Int y;
  Int x;
}

class C3{
}

=======  CMtd3 ======= 

void main(P3 this,Int a,Bool b,String c){
  println("Dummy statement to fulfill at least one statement requirement!");
}

void C1_doSomething_1(C1 this){
  println("May I put some' \\ complicated \" string here please?\\");
}

Bool C1_doSomething1_2(C1 this){
  Bool _t46;
  Bool _t47;
  Bool _t48;
  _t46=this.x;
  _t47=this.y;
  _t48=[_t46,_t47](||);
  Return _t48;
}

Bool C1_doSomething2_3(C1 this){
  Bool _t43;
  Bool _t44;
  Bool _t45;
  _t43=this.x;
  _t44=this.y;
  _t45=[_t43,_t44](&&);
  Return _t45;
}

Bool C1_doSomething3_4(C1 this,Bool z,Bool zz){
  Bool _t38;
  Bool _t39;
  Bool _t40;
  Bool _t41;
  Bool _t42;
  _t38=this.x;
  _t39=this.y;
  _t40=[_t38,_t39](||);
  _t41=[_t40,z](||);
  _t42=[_t41,zz](||);
  Return _t42;
}

Bool C1_doSomething4_5(C1 this,Bool z,Bool zz){
  Bool _t33;
  Bool _t34;
  Bool _t35;
  Bool _t36;
  Bool _t37;
  _t33=this.x;
  _t34=this.y;
  _t35=[_t33,_t34](&&);
  _t36=[_t35,z](&&);
  _t37=[_t36,zz](&&);
  Return _t37;
}

Bool C1_doSomething5_6(C1 this){
  Bool _t17;
  Bool _t18;
  Bool _t19;
  Bool _t20;
  Bool _t21;
  Bool _t22;
  Bool _t23;
  Bool _t24;
  Bool _t25;
  Bool _t26;
  Bool _t27;
  Bool _t28;
  Bool _t29;
  Bool _t30;
  Bool _t31;
  Bool _t32;
  _t17=this.x;
  _t18=(!)[_t17];
  _t19=this.y;
  _t20=this.x;
  _t21=(!)[_t20];
  _t22=(!)[_t21];
  _t23=[_t19,_t22](&&);
  _t24=[_t18,_t23](||);
  _t25=this.x;
  _t26=(!)[_t25];
  _t27=(!)[_t26];
  _t28=(!)[_t27];
  _t29=(!)[_t28];
  _t30=(!)[_t29];
  _t31=(!)[_t30];
  _t32=[_t24,_t31](||);
  Return _t32;
}

Bool C1_doSomething6_7(C1 this){
  Bool _t1;
  Bool _t2;
  Bool _t3;
  Bool _t4;
  Bool _t5;
  Bool _t6;
  Bool _t7;
  Bool _t8;
  Bool _t9;
  Bool _t10;
  Bool _t11;
  Bool _t12;
  Bool _t13;
  Bool _t14;
  Bool _t15;
  Bool _t16;
  _t1=this.x;
  _t2=(!)[_t1];
  _t3=this.y;
  _t4=this.x;
  _t5=this.x;
  _t6=(!)[_t5];
  _t7=(!)[_t6];
  _t8=(!)[_t7];
  _t9=(!)[_t8];
  _t10=(!)[_t9];
  _t11=(!)[_t10];
  _t12=[_t4,_t11](||);
  _t13=(!)[_t12];
  _t14=(!)[_t13];
  _t15=[_t3,_t14](&&);
  _t16=[_t2,_t15](||);
  Return _t16;
}

Int C2_doSomething1_1(C2 this){
  Int _t87;
  Int _t88;
  Int _t89;
  _t87=this.x;
  _t88=this.y;
  _t89=[_t87,_t88](+);
  Return _t89;
}

Int C2_doSomething2_2(C2 this){
  Int _t84;
  Int _t85;
  Int _t86;
  _t84=this.x;
  _t85=this.y;
  _t86=[_t84,_t85](*);
  Return _t86;
}

Int C2_doSomething3_3(C2 this,Int z){
  Int _t80;
  Int _t81;
  Int _t82;
  Int _t83;
  _t80=this.x;
  _t81=this.y;
  _t82=[_t80,_t81](+);
  _t83=[_t82,z](+);
  Return _t83;
}

Int C2_doSomething4_4(C2 this,Int z){
  Int _t76;
  Int _t77;
  Int _t78;
  Int _t79;
  _t76=this.x;
  _t77=this.y;
  _t78=[_t76,_t77](*);
  _t79=[_t78,z](*);
  Return _t79;
}

Int C2_doSomething5_5(C2 this,Int z){
  Int _t72;
  Int _t73;
  Int _t74;
  Int _t75;
  _t72=this.x;
  _t73=this.y;
  _t74=[_t72,_t73](*);
  _t75=[_t74,z](+);
  Return _t75;
}

Int C2_doSomething6_6(C2 this,Int z){
  Int _t68;
  Int _t69;
  Int _t70;
  Int _t71;
  _t68=this.x;
  _t69=this.y;
  _t70=[_t69,z](*);
  _t71=[_t68,_t70](+);
  Return _t71;
}

Int C2_doSomething7_7(C2 this,Int z){
  Int _t64;
  Int _t65;
  Int _t66;
  Int _t67;
  _t64=this.x;
  _t65=this.y;
  _t66=[_t65,z](*);
  _t67=[_t64,_t66](+);
  Return _t67;
}

Int C2_doSomething8_8(C2 this,Int z){
  Int _t60;
  Int _t61;
  Int _t62;
  Int _t63;
  _t60=this.x;
  _t61=this.y;
  _t62=[_t60,_t61](+);
  _t63=[_t62,z](*);
  Return _t63;
}

Int C2_doSomething9_9(C2 this,Int z){
  Int _t56;
  Int _t57;
  Int _t58;
  Int _t59;
  _t56=this.x;
  _t57=this.y;
  _t58=[_t57,z](*);
  _t59=[_t56,_t58](+);
  Return _t59;
}

Int C2_doSomething10_10(C2 this,Int z){
  Int _t55;
  _t55=(-)[z];
  Return _t55;
}

Int C2_doSomething11_11(C2 this,Int z){
  Int _t53;
  Int _t54;
  _t53=(-)[z];
  _t54=(-)[_t53];
  Return _t54;
}

Int C2_doSomething12_12(C2 this,Int z){
  Int _t49;
  Int _t50;
  Int _t51;
  Int _t52;
  _t49=(-)[z];
  _t50=(-)[_t49];
  _t51=(-)[_t50];
  _t52=(-)[_t51];
  Return _t52;
}

Bool C3_doSomething1_1(C3 this,Int a,Int b){
  Bool _t95;
  _t95=[a,b](>=);
  Return _t95;
}

Bool C3_doSomething2_2(C3 this,Int a,Int b){
  Bool _t94;
  _t94=[a,b](>);
  Return _t94;
}

Bool C3_doSomething3_3(C3 this,Int a,Int b){
  Bool _t93;
  _t93=[a,b](<=);
  Return _t93;
}

Bool C3_doSomething4_4(C3 this,Int a,Int b){
  Bool _t92;
  _t92=[a,b](<);
  Return _t92;
}

Bool C3_doSomething5_5(C3 this,Int a,Int b){
  Bool _t91;
  _t91=[a,b](!=);
  Return _t91;
}

Bool C3_doSomething6_6(C3 this,Int a,Int b){
  Bool _t90;
  _t90=[a,b](==);
  Return _t90;
}

======= End of IR3 Program =======

